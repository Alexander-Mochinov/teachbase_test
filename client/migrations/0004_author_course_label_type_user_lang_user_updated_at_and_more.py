# Generated by Django 4.0.6 on 2022-07-06 13:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('client', '0003_authorizationdata_created_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'db_table': 'author',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, verbose_name='Название курса')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обновления')),
                ('content_type', models.PositiveIntegerField(blank=True, null=True, verbose_name='Номет объекта')),
                ('owner_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='ФИО владельца')),
                ('thumb_url', models.CharField(blank=True, max_length=64, null=True, verbose_name='thumb_url')),
                ('cover_url', models.CharField(blank=True, max_length=64, null=True, verbose_name='cover_url')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='Последняя активность')),
                ('total_score', models.PositiveIntegerField(blank=True, null=True, verbose_name='Общий счёт')),
                ('total_tasks', models.PositiveIntegerField(blank=True, null=True, verbose_name='Всего задач')),
                ('is_netology', models.BooleanField(default=False, verbose_name='Нетология')),
                ('bg_url', models.CharField(blank=True, max_length=64, null=True, verbose_name='bg_url')),
                ('video_url', models.CharField(blank=True, max_length=64, null=True, verbose_name='video_url')),
                ('demo', models.BooleanField(default=False, verbose_name='Демо версия')),
                ('unchangeable', models.BooleanField(default=False, verbose_name='Неизменный')),
                ('include_weekly_report', models.BooleanField(default=False, verbose_name='Исключить недельный отчёт')),
                ('custom_author_names', models.CharField(blank=True, max_length=64, null=True, verbose_name='Пользовательские имена авторов')),
                ('custom_contents_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Настраиваемое содержимое')),
                ('hide_viewer_navigation', models.BooleanField(default=False, verbose_name='Нетология')),
                ('duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Продолжительность')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'db_table': 'cource',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Название типа')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата обновления')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обновления')),
                ('labels', models.ManyToManyField(blank=True, to='client.label', verbose_name='Дочерние Заголовоки/Теги курса')),
            ],
            options={
                'verbose_name': 'Заголовок/Тег курса',
                'verbose_name_plural': 'Заголовоки/Теги курса',
                'db_table': 'lable',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Название типа')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обновления')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Тип курса',
                'verbose_name_plural': 'Типы курсов',
                'db_table': 'type_course',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='lang',
            field=models.CharField(choices=[('ru', 'ru'), ('eng', 'eng')], default='ru', max_length=5, verbose_name='Язык'),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата обновления'),
        ),
        migrations.AlterField(
            model_name='endpoint',
            name='params',
            field=models.ManyToManyField(to='client.endpointparameters', verbose_name='Параметры'),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Название типа')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата начала')),
                ('finished_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата окончания')),
                ('infinitely', models.BooleanField(default=False, verbose_name='Повторяющая сессия')),
                ('access_type', models.CharField(choices=[('privy', 'Привватный'), ('publy', 'Публичный')], default='privy', max_length=32, verbose_name='Тип доступа')),
                ('finished', models.BooleanField(default=False, verbose_name='Закончилась сессия')),
                ('navigation', models.PositiveIntegerField(blank=True, null=True, verbose_name='Навигация')),
                ('apply_url', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Применяемый URL')),
                ('deadline_soon', models.BooleanField(default=False, verbose_name='Дедлайн скоро')),
                ('assignments_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Cчетчик заданий')),
                ('deadline_type', models.PositiveIntegerField(blank=True, null=True, verbose_name='ID типа дедлайна')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссыдка на курс')),
                ('period', models.DateTimeField(auto_now_add=True, verbose_name='Дата окончания')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.course', verbose_name='Курс')),
                ('labels', models.ManyToManyField(blank=True, to='client.label', verbose_name='Теги/Заголовки')),
            ],
            options={
                'verbose_name': 'Сессии',
                'db_table': 'session',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт'),
        ),
        migrations.AddField(
            model_name='course',
            name='authors',
            field=models.ManyToManyField(blank=True, to='client.author', verbose_name='Авторы'),
        ),
        migrations.AddField(
            model_name='course',
            name='types',
            field=models.ManyToManyField(blank=True, to='client.type', verbose_name='Типы'),
        ),
        migrations.AddField(
            model_name='author',
            name='users',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
